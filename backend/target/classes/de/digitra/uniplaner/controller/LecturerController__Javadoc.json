{"doc":"","fields":[],"enumConstants":[],"methods":[{"name":"createLecturer","paramTypes":["de.digitra.uniplaner.domain.Lecturer"],"doc":" {@code POST  /lecturers} : Methode erstellt eine Ressource vom Typ Lecturer.\n\n @param lecturer Instanz von Lecturer, die am Server erstellt werden soll.\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} und im Body die erstellte Ressource.\n @throws BadRequestException falls lecturer nicht zulässig ist.\n"},{"name":"updateLecturer","paramTypes":["de.digitra.uniplaner.domain.Lecturer"],"doc":" {@code PUT  /lecturers} : aktualisiert eine existierende Ressource vom Typ Lecturer.\n\n @param lecturer Instanz von Lecturer, die am Server aktualisiert werden soll.\n Diese Instanz enthält die aktuellen Werte.\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body die aktualisierte Ressource.\n @throws BadRequestException wird ausgelöst, falls lecturer nicht zulässig ist.\n"},{"name":"updateLecturer","paramTypes":["java.lang.Long","de.digitra.uniplaner.domain.Lecturer"],"doc":" {@code PUT  /lecturers/:id} : aktualisiert eine existierende Ressource vom Typ Lecturer.\n\n @param id Id der Ressource vom Typ Lecturer, die am Server aktualisiert werden soll.\n @param lecturerDetails Instanz von Lecturer, die am Server aktualisiert werden soll.\n Diese Instanz enthält die aktuellen Werte.\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body die aktualisierte Ressource.\n @throws ResourceNotFoundException wird ausgelöst, falls die Ressource mit der angegebenen Id nicht gefunden werden konnte.\n"},{"name":"getAlllecturers","paramTypes":[],"doc":" {@code GET  /lecturers} : Liefert eine Liste aller am Server gespeicherten Ressourcen vom Typ Lecturer.\n\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body eine Liste von Ressourcen vom Typ Lecturer.\n"},{"name":"getLecturer","paramTypes":["java.lang.Long"],"doc":" {@code GET  /lecturers/:id} : Liefert die Ressource vom Typ Lecturer mit der angegebenen Id zurück.\n\n @param id Die Id der Ressource vom Typ Lecturer, die abgerufen werden soll.\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} und im Body die gesuchte Ressource vom Typ Lecturer.\n @throws ResourceNotFoundException wird ausgelöst, falls die Ressource mit der angegebenen Id nicht gefunden werden konnte.\n"},{"name":"deleteLecturer","paramTypes":["java.lang.Long"],"doc":" {@code DELETE  /lecturers/:id} : Mit dieser Methode eine Ressource mit der angegebenen Id gelöscht.\n\n @param id Die Id der Ressource vom Typ Lecturer, die gelöscht werden soll.\n @return Eine {@link ResponseEntity} mit Status Code {@code 204 (NO_CONTENT)}.\n"}],"constructors":[]}