{"doc":"","fields":[],"enumConstants":[],"methods":[{"name":"createLecture","paramTypes":["de.digitra.uniplaner.domain.Lecture"],"doc":" {@code POST  /lectures} : Methode erstellt eine Ressource vom Typ Lecture.\n\n @param lecture Instanz von Lecture, die am Server erstellt werden soll.\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} und im Body die erstellte Ressource.\n @throws BadRequestException falls lecture nicht zulässig ist.\n"},{"name":"updateLecture","paramTypes":["de.digitra.uniplaner.domain.Lecture"],"doc":" {@code PUT  /lectures} : aktualisiert eine existierende Ressource vom Typ Lecture.\n\n @param lecture Instanz von Lecture, die am Server aktualisiert werden soll.\n                Diese Instanz enthält die aktuellen Werte.\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body die aktualisierte Ressource.\n @throws BadRequestException wird ausgelöst, falls lecture nicht zulässig ist.\n"},{"name":"updateLecture","paramTypes":["java.lang.Long","de.digitra.uniplaner.domain.Lecture"],"doc":" {@code PUT  /lectures/:id} : aktualisiert eine existierende Ressource vom Typ Lecture.\n\n @param id             Id der Ressource vom Typ Lecture, die am Server aktualisiert werden soll.\n @param lectureDetails Instanz von Lecture, die am Server aktualisiert werden soll.\n                       Diese Instanz enthält die aktuellen Werte.\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body die aktualisierte Ressource.\n @throws ResourceNotFoundException wird ausgelöst, falls die Ressource mit der angegebenen Id nicht gefunden werden konnte.\n"},{"name":"getAlllectures","paramTypes":[],"doc":" {@code GET  /lectures} : Liefert eine Liste aller am Server gespeicherten Ressourcen vom Typ Lecture.\n\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body eine Liste von Ressourcen vom Typ Lecture.\n"},{"name":"getLecture","paramTypes":["java.lang.Long"],"doc":" {@code GET  /lectures/:id} : Liefert die Ressource vom Typ Lecture mit der angegebenen Id zurück.\n\n @param id Die Id der Ressource vom Typ Lecture, die abgerufen werden soll.\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} und im Body die gesuchte Ressource vom Typ Lecture.\n @throws ResourceNotFoundException wird ausgelöst, falls die Ressource mit der angegebenen Id nicht gefunden werden konnte.\n"},{"name":"deleteLecture","paramTypes":["java.lang.Long"],"doc":" {@code DELETE  /lectures/:id} : Mit dieser Methode eine Ressource mit der angegebenen Id gelöscht.\n\n @param id Die Id der Ressource vom Typ Lecture, die gelöscht werden soll.\n @return Eine {@link ResponseEntity} mit Status Code {@code 204 (NO_CONTENT)}.\n"}],"constructors":[]}