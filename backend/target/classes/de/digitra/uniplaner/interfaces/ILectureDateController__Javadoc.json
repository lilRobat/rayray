{"doc":"","fields":[],"enumConstants":[],"methods":[{"name":"createLectureDate","paramTypes":["de.digitra.uniplaner.domain.LectureDate"],"doc":" {@code POST  /lecturedates} : Methode erstellt eine Ressource vom Typ LectureDate.\n\n @param lecturedate Instanz von LectureDate, die am Server erstellt werden soll.\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} und im Body die erstellte Ressource.\n @throws BadRequestException falls lecturedate nicht zulässig ist.\n"},{"name":"updateLectureDate","paramTypes":["de.digitra.uniplaner.domain.LectureDate"],"doc":" {@code PUT  /lecturedates} : aktualisiert eine existierende Ressource vom Typ LectureDate.\n\n @param lecturedate Instanz von LectureDate, die am Server aktualisiert werden soll.\n                    Diese Instanz enthält die aktuellen Werte.\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body die aktualisierte Ressource.\n @throws BadRequestException wird ausgelöst, falls lecturedate nicht zulässig ist.\n"},{"name":"updateLectureDate","paramTypes":["java.lang.Long","de.digitra.uniplaner.domain.LectureDate"],"doc":" {@code PUT  /lecturedates/:id} : aktualisiert eine existierende Ressource vom Typ LectureDate.\n\n @param id                 Id der Ressource vom Typ LectureDate, die am Server aktualisiert werden soll.\n @param lecturedateDetails Instanz von LectureDate, die am Server aktualisiert werden soll.\n                           Diese Instanz enthält die aktuellen Werte.\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body die aktualisierte Ressource.\n @throws ResourceNotFoundException wird ausgelöst, falls die Ressource mit der angegebenen Id nicht gefunden werden konnte.\n"},{"name":"getAlllecturedates","paramTypes":[],"doc":" {@code GET  /lecturedates} : Liefert eine Liste aller am Server gespeicherten Ressourcen vom Typ LectureDate.\n\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body eine Liste von Ressourcen vom Typ LectureDate.\n"},{"name":"getLectureDate","paramTypes":["java.lang.Long"],"doc":" {@code GET  /lecturedates/:id} : Liefert die Ressource vom Typ LectureDate mit der angegebenen Id zurück.\n\n @param id Die Id der Ressource vom Typ LectureDate, die abgerufen werden soll.\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} und im Body die gesuchte Ressource vom Typ LectureDate.\n @throws ResourceNotFoundException wird ausgelöst, falls die Ressource mit der angegebenen Id nicht gefunden werden konnte.\n"},{"name":"deleteLectureDate","paramTypes":["java.lang.Long"],"doc":" {@code DELETE  /lecturedates/:id} : Mit dieser Methode eine Ressource mit der angegebenen Id gelöscht.\n\n @param id Die Id der Ressource vom Typ LectureDate, die gelöscht werden soll.\n @return Eine {@link ResponseEntity} mit Status Code {@code 204 (NO_CONTENT)}.\n"}],"constructors":[]}